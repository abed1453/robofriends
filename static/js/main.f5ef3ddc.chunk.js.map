{"version":3,"sources":["components/Card.js","components/CardList.js","reportWebVitals.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["Card","_ref","name","email","id","React","createElement","alt","src","concat","CardList","robots","className","map","user","i","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","children","ErrorBoundary","Component","constructor","super","this","state","hasError","componentDidCatch","error","info","setState","render","App","onSearchChange","bind","componentDidMount","fetch","response","json","users","event","target","value","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","createRoot","document","getElementById","StrictMode"],"mappings":"sSAeeA,MAZFC,IAA0B,IAAzB,KAAEC,EAAI,MAAEC,EAAK,GAAEC,GAAIH,EAC7B,OACII,IAAAC,cAAA,OAAKF,GAAG,QACJC,IAAAC,cAAA,OAAKC,IAAI,SAASC,IAAG,wBAAAC,OAA0BL,EAAE,cACjDC,IAAAC,cAAA,WACID,IAAAC,cAAA,UAAKJ,GACLG,IAAAC,cAAA,SAAIH,M,MCYLO,MAjBET,IAAiB,IAAhB,OAAEU,GAAQV,EACxB,OACII,IAAAC,cAAA,OAAKM,UAAU,aACVD,EAAOE,IAAI,CAACC,EAAMC,IAEXV,IAAAC,cAACN,EAAI,CACDgB,IAAKD,EACLX,GAAIO,EAAOI,GAAGX,GACdF,KAAMS,EAAOI,GAAGb,KAChBC,MAAOQ,EAAOI,GAAGZ,WCD1Bc,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKnB,IAAkD,IAAjD,OAAEoB,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASxB,EACpEoB,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,M,MCQCQ,MAbGzB,IAAkC,IAAjC,YAAC0B,EAAW,aAAEC,GAAa3B,EAC1C,OACII,IAAAC,cAAA,OAAKM,UAAU,UACXP,IAAAC,cAAA,SACIM,UAAU,mCACViB,KAAK,SACLC,YAAY,gBACZC,SAAUH,M,YCEXI,MARCC,GAER5B,IAAAC,cAAA,OAAKM,UAAU,oBACVqB,EAAMC,UCJnB,MAAMC,UAAsB9B,IAAM+B,UAC9BC,cACIC,QACAC,KAAKC,MAAQ,CACTC,UAAU,GAIlBC,kBAAkBC,EAAOC,GACrBL,KAAKM,SAAS,CAAEJ,UAAU,IAG9BK,SACI,OAAIP,KAAKC,MAAMC,SACJpC,IAAAC,cAAA,UAAI,0BAERiC,KAAKN,MAAMC,UAIXC,QCdf,MAAMY,UAAY1C,IAAM+B,UACpBC,cACIC,QACAC,KAAKC,MAAQ,CACT7B,OAAQ,GACRgB,YAAa,IAEjBY,KAAKS,eAAiBT,KAAKS,eAAeC,KAAKV,MAGnDW,oBACIC,MAAM,8CACD/B,KAAKgC,GAAYA,EAASC,QAC1BjC,KAAKkC,GAASf,KAAKM,SAAS,CAAElC,OAAQ2C,KAG/CN,eAAeO,GACXhB,KAAKM,SAAS,CAAElB,YAAa4B,EAAMC,OAAOC,QAG9CX,SACI,MAAMY,EAAiBnB,KAAKC,MAAM7B,OAAOgD,OAAOC,GACrCA,EAAM1D,KAAK2D,cAAcC,SAASvB,KAAKC,MAAMb,YAAYkC,gBAEpE,OAAiC,IAA7BtB,KAAKC,MAAM7B,OAAOoD,OACX1D,IAAAC,cAAA,UAAI,cAGXD,IAAAC,cAAA,OAAKM,UAAU,MACXP,IAAAC,cAAA,MAAIF,GAAG,eAAc,eACrBC,IAAAC,cAACoB,EAAS,CAACE,aAAcW,KAAKS,iBAC9B3C,IAAAC,cAAC0B,EAAM,KACH3B,IAAAC,cAAC6B,EAAa,KACV9B,IAAAC,cAACI,EAAQ,CAACC,OAAQ+C,QAS3BX,QCxCFiB,IAASC,WAAWC,SAASC,eAAe,SACpDrB,OACHzC,IAAAC,cAACD,IAAM+D,WAAU,KACf/D,IAAAC,cAAA,WACED,IAAAC,cAACyC,EAAG,SAQV9B,M","file":"static/js/main.f5ef3ddc.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n    return (\r\n        <div id='card'>\r\n            <img alt='robots' src={`https://robohash.org/${id}?200x200`} />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport './CardList.css';\r\n\r\nconst CardList = ({ robots }) => {\r\n    return (\r\n        <div className='card-list'>\r\n            {robots.map((user, i) => {\r\n                return (\r\n                    <Card\r\n                        key={i}\r\n                        id={robots[i].id}\r\n                        name={robots[i].name}\r\n                        email={robots[i].email}\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n    return (\r\n        <div className='tc pa2'>\r\n            <input \r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search' \r\n                placeholder='search robots'\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport './Scroll.css';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div className=\"scroll-container\">\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            hasError: false\r\n        };\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oops. That is not good</h1>;\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from 'react';\r\nimport { robots } from '../robots';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        };\r\n        this.onSearchChange = this.onSearchChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ robots: users }));\r\n    }\r\n\r\n    onSearchChange(event) {\r\n        this.setState({ searchfield: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        const filteredRobots = this.state.robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        });\r\n        if (this.state.robots.length === 0) {\r\n            return <h1>Loading...</h1>;\r\n        } else { \r\n        return (\r\n            <div className='tc'>\r\n                <h1 id=\"titleOfPage\">RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange} />\r\n                <Scroll>\r\n                    <ErrorBoundary>\r\n                        <CardList robots={filteredRobots} />\r\n                    </ErrorBoundary>\r\n                </Scroll>\r\n            </div>\r\n        ); \r\n    } \r\n} \r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport Card from './components/Card';\nimport CardList from './components/CardList';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport {robots} from './robots';\nimport App from './containers/App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <div>\n      <App/>\n    </div>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}